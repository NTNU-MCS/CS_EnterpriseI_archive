%% plot_script.m
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Written by Eirik Valle
%
% Date: 28.04.2014
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Purpose:
% 
%
% Customized for specific scenarios
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
close all
clear all
set(0,'defaulttextinterpreter','latex')

r2d = 180/pi;
%% Load required data files generated by simulation
load eta.mat
load nu.mat
load nu_dot.mat
load eta_hat.mat
load nu_hat.mat
load nu_dot_hat.mat
load eta_d.mat
load eta_dot_d.mat
load eta_ddot_d.mat
load b_hat.mat
load ref.mat
load tau.mat
load tau_actual.mat
load thrust.mat

eta_tilde = eta-eta_hat;
e_eta = eta - eta_d;
%nu_tilde = nu - nu_hat;
%nu_dot_tilde = nu_dot -nu_dot_hat;
L = length(eta);
time = eta(1,L);

x_ref = ref(2,:);
y_ref = ref(3,:);
psi_ref = ref(4,:);

x_start = 1;
x_stop = max(eta(1,:)) - 5;
%% Parametes for axis purposes
max_xyz = round(max(abs([min(eta(2,:)) min(eta(3,:)) max(eta(2,:))...
    max(eta(3,:)) min(eta(4,:)) max(eta(4,:))] ))) + 1;

min_xyz = -max_xyz;

max_xy = round(max(abs([min(eta(2,:)) min(eta(3,:)) max(eta(2,:))...
    max(eta(3,:))])))+ 1;
min_xy = -max_xy;

smp = 500;          % Sample for plots of squares.
%% Pathplotter

%%
%N = length(eta_dot_d);
%nu_d = zeros(3,N);
%for i =1:N
%   [nu_d(i) = Rzyx(0,0,eta_d(4,i))*[eta_dot_d(2,i);eta_dot_d(3,i);eta_dot_d(4,i)];
%end

%% North - East plot 
figure(1)
XX= eta(2,x_start*100:x_stop*100);
YY = eta(3,x_start*100:x_stop*100);
PSIPSI = eta(4,x_start*100:x_stop*100);
max_xy = round(max(abs([min(XX) min(YY) max(XX) max(YY)])))+ 1;
min_xy = -max_xy;
plot(YY,XX)%eta_hat(3,:),eta_hat(2,:),'b')
hold on
%plot(y_out(3,1:smp:length(y_out(3,:))),y_out(2,1:smp:length(y_out(3,:))),'rs','MarkerSize',15)
hold on
%plot(x_hat(3,1:smp:length(x_hat(3,:))),x_hat(2,1:smp:length(x_hat(3,:))),'bs','MarkerSize',15)

%axis([min_xy max_xy min_xy max_xy])
axis equal
grid on
title('X-Y plot')
xlabel('Y [m]'), ylabel('X [m]')
hold on
plot(y_ref,x_ref,'+g','MarkerSize',15)
%legend('Measured','Location','SouthEast')

%viscircles([y_ref,x_ref],R_dp,'EdgeColor','g',...
%                                      'LineStyle','--')


saveas(figure(1),'plot\XY_plot.png')
saveas(figure(1),'plot\XY_plot.eps','epsc')

%% Plot of estimated bias
figure(2)
subplot(3,1,1)
plot(b_hat(1,:),b_hat(2,:))
xlabel('Time [s]'), ylabel('$\hat b_1$ ')
xlim([x_start x_stop])    
%legend('Bias - North')
grid on
title('Bias Plot')

subplot(3,1,2)
plot(b_hat(1,:),b_hat(3,:))
xlabel('Time [s]'), ylabel('$\hat b_2$ ')
xlim([x_start x_stop])    
%legend('Bias - East')
grid on


subplot(3,1,3)
plot(b_hat(1,:),b_hat(4,:))
xlabel('Time [s]'), ylabel('$\hat b_3$ ')
xlim([x_start x_stop])    
%legend('Bias - \psi')
grid on


saveas(figure(2),'plot\bias.png')
saveas(figure(2),'plot\bias.eps','epsc')
%% Plot of estiamated values versus measured values in north east down yaw
figure(3)
subplot(3,1,1)

%plot(eta(1,:),eta(2,:),'b',eta_hat(1,:),eta_hat(2,:),'',eta_d(1,:),eta_d(2,:),'g')
plot(eta(1,:),eta(2,:),eta_d(1,:),eta_d(2,:),'g')
hold on
plot(ref(1,:),ref(2,:),'r')
hold off
legend('Measured','Desired','Reference','Location', 'SouthEast')
ylabel('m')
grid on
xlim([x_start x_stop])    
title('x position')


subplot(3,1,2)
plot(eta(1,:),eta(3,:),eta_d(1,:),eta_d(3,:),'g')
hold on
plot(ref(1,:),ref(3,:),'r')
hold off
legend('Measured','Desired','Reference','Location', 'SouthEast')
ylabel('m')
grid on
xlim([x_start x_stop])    
title('y position')


subplot(3,1,3)
plot(eta(1,:),eta(4,:)*r2d,eta_d(1,:),eta_d(4,:)*r2d,'g')
hold on
plot(ref(1,:),ref(4,:)*r2d,'r')
hold off
legend('Measured','Desired','Reference')
xlabel('Time [s]'),ylabel('deg')
grid on
xlim([x_start x_stop])    
ylim([-50 300])
title('Yaw angle')


saveas(figure(3),'plot\eta.png')
saveas(figure(3),'plot\eta.eps','epsc')
%% Plot of estimated velocities
figure(4)
subplot(3,1,1)
plot(nu(1,:),nu(2,:),'b',nu_hat(1,:),nu_hat(2,:),'r')
hold on
legend('Measured','Estimate')
xlim([x_start x_stop])    
xlabel('Time [s]'),ylabel('$\hat u$ [m/s]')
grid on


subplot(3,1,2)
plot(nu(1,:),nu(3,:),'b',nu_hat(1,:),nu_hat(3,:),'r')
xlabel('Time [s]'),ylabel('$\hat v$ [m/s]')
xlim([x_start x_stop])    
grid on
legend('Measured','Estimate')


subplot(3,1,3)
plot(nu(1,:),nu(4,:)*r2d,'b',nu_hat(1,:),nu_hat(4,:)*r2d,'r')
xlabel('Time [s]'),ylabel('r [deg/s]')
xlim([x_start x_stop])    
grid on
legend('Measured','Estimate')


saveas(figure(4),'plot\nu_hat.png')
saveas(figure(4),'plot\nu_hat.eps','epsc')
%%
figure(5)
subplot(3,1,1)
plot(tau(1,:),tau(2,:))
hold on
%plot(tau_actual(1,:),tau_actual(2,:),'b')
%legend('Commanded')
xlabel('Time [s]'),ylabel('$\tau_x$ [N]')
xlim([x_start x_stop])    
grid on
title('\textbf{Controller ouput}')


subplot(3,1,2)
plot(tau(1,:),tau(3,:))
hold on
%plot(tau_actual(1,:),tau_actual(3,:),'b')
%legend('Commanded','Actual')
xlabel('Time [s]'),ylabel('$\tau_y $[N]')
grid on
xlim([x_start x_stop])    

subplot(3,1,3)
plot(tau(1,:),tau(4,:))
hold on
%plot(tau_actual(1,:),tau_actual(4,:),'b')
%legend('Commanded','Actual')
xlabel('Time [s]'),ylabel('$\tau_\psi$ [N]')
grid on
xlim([x_start x_stop])    

saveas(figure(5),'plot\tau.png')
saveas(figure(5),'plot\tau.eps','epsc')
%% Thrust plot
figure(6)
subplot(3,1,1)
plot(thrust(1,:),thrust(2,:))
%legend('u_{HS}')
xlabel('Time [s]'),ylabel(' $u_{BT}$')
grid on
xlim([x_start x_stop])    
title('\textbf{Thruster commands}')

subplot(3,1,2)
plot(thrust(1,:),thrust(3,:))
%legend('u_{HP}'),
xlabel('Time [s]'),ylabel(' $u_{VSP}$ [N]')
grid on
xlim([x_start x_stop])    

subplot(3,1,3)
plot(thrust(1,:),thrust(4,:))
%legend('u_{VS}'),
xlabel('Time [s]'),ylabel(' $\alpha_{VSP}$ [N]')
grid on
xlim([x_start x_stop])    

saveas(figure(6),'plot\thrust.png')
saveas(figure(6),'plot\thrust.eps','epsc')
%% Eta tilde
figure(7)
subplot(3,1,1)
plot(eta(1,:),eta_tilde(2,:))
xlabel('Time [s]'), ylabel('$\tilde x$[m]')
xlim([x_start x_stop])    
grid on

subplot(3,1,2)
plot(eta(1,:),eta_tilde(3,:))
xlabel('Time [s]'), ylabel('$\tilde y$[m]')
xlim([x_start x_stop])    
grid on


subplot(3,1,3)
plot(eta(1,:),eta_tilde(4,:)*r2d)
xlabel('Time [s]'), ylabel('$\tilde \psi$[deg]')
xlim([x_start x_stop])    
grid on

saveas(figure(7),'plot\eta_tilde.png')
saveas(figure(7),'plot\eta_tilde.eps','epsc')
%%
figure(8)
subplot(3,1,1)
plot(eta(1,:),e_eta(2,:))
xlabel('Time [s]'), ylabel('$e_x$[m]')
xlim([x_start x_stop])    
grid on
title('\textbf{Error}')

subplot(3,1,2)
plot(eta(1,:),e_eta(3,:))
xlabel('Time [s]'), ylabel('$e_y$[m]')
xlim([x_start x_stop])    
grid on


subplot(3,1,3)
plot(eta(1,:),e_eta(4,:)*r2d)
xlabel('Time [s]'), ylabel('$e_\psi$[deg]')
xlim([x_start x_stop])    
grid on

saveas(figure(8),'plot\eta_error.png')
saveas(figure(8),'plot\eta_error.eps','epsc')

%%
figure(9)

subplot(2,1,1)
plot(eta(1,:),eta(4,:)*r2d,eta_d(1,:),eta_d(4,:)*r2d,'g')
hold on
plot(ref(1,:),ref(4,:)*r2d,'r')
hold off
legend('Measured','Desired','Reference')
xlabel('Time [s]'),ylabel('$\psi$ [deg]')
grid on
xlim([x_start x_stop])    
title('Yaw angle')

subplot(2,1,2)
plot(eta(1,:),e_eta(4,:)*r2d)
xlabel('Time [s]'), ylabel('$e_\psi$[deg]')
xlim([x_start x_stop])    
grid on
title('Yaw angle error')


saveas(figure(9),'plot\yaw.png')
saveas(figure(9),'plot\yaw.eps','epsc')

%% NED with ROV patch
X = XX;%eta(2,:);
Y = YY;%eta(3,:);
PSI = PSIPSI;
tsamp = 0.01;
tstart = x_start;
tstop = x_stop;%round(max(time));
track = 0;
%WP = Wpt;


 L = 1;
 dec = round(x_stop-x_start)*3;


X_m = XX;%eta(2,:);
Y_m = YY;%eta(3,:);
PSI_m = PSIPSI;%eta(4,:);


figure(12)
hold on
% psiTemp=atan2(WP(2,2)-WP(2,1),WP(1,2)-WP(1,1));
% 
%    % siz=size(WP);
%    
% 
    plot(Y_m, X_m,'r')
    %plot(Y,X,'b')
% 
% for ii=1:(siz(2)-1)
%        plot([WP(2,ii), WP(2,ii+1)], [WP(1,ii), WP(1,ii+1)], 'g+')
%  end
tnow=tstart;

for now=1:dec:length(X_m)
    
    tmpR=[cos(PSI_m(now)) -sin(PSI_m(now)); sin(PSI_m(now)) cos(PSI_m(now))];
    boat = tmpR*[L/2 .9*L/2 .5*L/2 -L/2 -L/2 .5*L/2 .9*L/2 L/2; 
              0 L/10 L/3 L/3 -L/3 -L/3 -L/10 0];
    plot(Y_m(now)+boat(2,:),X_m(now)+boat(1,:),'r');
    patch(Y_m(now)+boat(2,:),X_m(now)+boat(1,:),'r');
    
    tnow=tnow+tsamp*dec;
end



for now=1:dec:length(X)
    
    tmpR=[cos(PSI(now)) -sin(PSI(now)); sin(PSI(now)) cos(PSI(now))];
    boat = tmpR*[L/2 .9*L/2 .5*L/2 -L/2 -L/2 .5*L/2 .9*L/2 L/2; 
              0 L/10 L/3 L/3 -L/3 -L/3 -L/10 0];
    plot(Y(now)+boat(2,:),X(now)+boat(1,:),'y');
    patch(Y(now)+boat(2,:),X(now)+boat(1,:),'y');
    
    tnow=tnow+tsamp*dec;
end

 

xlabel('East [m]')
ylabel('North [m]')
grid on
hold off
%legend('Measured','Estimated')
axis equal

saveas(figure(12),'plot\XY_patch.png')
saveas(figure(12),'plot\XY_patch.eps','epsc')
%% Save plots to file

% ex = exist('choise','var'); % Check if choise varable exists
% 
% 
% if ex == 1                  % Execute if choise exists
%     
%     switch choise
%     
%      case 1
%         saveas(figure(1),'Case1_results\NorthEast_1.png')
%         saveas(figure(2),'Case1_results\NED_3D_1.png')
%         saveas(figure(3),'Case1_results\sub_bias_1.png')
%         saveas(figure(4),'Case1_results\sub_NEDY_1.png')
%         saveas(figure(5),'Case1_results\sub_uvwr_1.png')
%         saveas(figure(7),'Case1_results\tau_1.png')
%         saveas(figure(8),'Case1_results\thrusters_1.png')
%         saveas(figure(9),'Case1_results\DP_controller_1.png')
%         saveas(figure(12),'Case1_results\boat_1.png')
%         
%     
%      case 2
%         saveas(figure(1),'Case2_results\NorthEast_2.png')
%         saveas(figure(2),'Case2_results\NED_3D_2.png')
%         saveas(figure(3),'Case2_results\sub_bias_2.png')
%         saveas(figure(4),'Case2_results\sub_NEDY_2.png')
%         saveas(figure(5),'Case2_results\sub_uvwr_2.png')
%         saveas(figure(7),'Case2_results\tau_2.png')
%         saveas(figure(8),'Case2_results\thrusters_2.png')
%         saveas(figure(9),'Case2_results\DP_controller_2.png')
%         saveas(figure(12),'Case2_results\boat_2.png')
%        
%      case 3
%         saveas(figure(1),'Case3_results\NorthEast_3.png')
%         saveas(figure(2),'Case3_results\NED_3D_3.png')
%         saveas(figure(3),'Case3_results\sub_bias_3.png')
%         saveas(figure(4),'Case3_results\sub_NEDY_3.png')
%         saveas(figure(5),'Case3_results\sub_uvwr_3.png')
%         saveas(figure(7),'Case3_results\tau_3.png')
%         saveas(figure(8),'Case3_results\thrusters_3.png')
%         saveas(figure(9),'Case3_results\DP_controller_3.png')
%         saveas(figure(12),'Case3_results\boat_3.png')
%     
%      case 4
%         saveas(figure(1),'Case4_results\NorthEast_4.png')
%         saveas(figure(2),'Case4_results\NED_3D_4.png')
%         saveas(figure(3),'Case4_results\sub_bias_4.png')
%         saveas(figure(4),'Case4_results\sub_NEDY_4.png')
%         saveas(figure(5),'Case4_results\sub_uvwr_4.png')
%         saveas(figure(7),'Case4_results\tau_4.png')
%         saveas(figure(8),'Case4_results\thrusters_4.png')
%         saveas(figure(9),'Case4_results\DP_controller_4.png')
%         saveas(figure(12),'Case4_results\boat_4.png')
%     
%      case 5
%         saveas(figure(1),'Test_results\NorthEast_test.png')
%         saveas(figure(2),'Test_results\NED_3D_test.png')
%         saveas(figure(3),'Test_results\sub_bias_test.png')
%         saveas(figure(4),'Test_results\sub_NEDY_test.png')
%         saveas(figure(5),'Test_results\sub_uvwr_test.png')
%         saveas(figure(12),'Test_results\boat_test.png')
%         
%      case 6
%         saveas(figure(1),'Signal_loss_DP_results\NorthEast_sdp.png')
%         saveas(figure(2),'Signal_loss_DP_results\NED_3D_sdp.png')
%         saveas(figure(3),'Signal_loss_DP_results\sub_bias_sdp.png')
%         saveas(figure(4),'Signal_loss_DP_results\sub_NEDY_sdp.png')
%         saveas(figure(5),'Signal_loss_DP_results\sub_uvwr_sdp.png')
%         saveas(figure(7),'Signal_loss_DP_results\tau_sdp.png')
%         saveas(figure(8),'Signal_loss_DP_results\thrusters_sdp.png')
%         saveas(figure(9),'Signal_loss_DP_results\DP_controller_sdp.png')
%         saveas(figure(12),'Signal_loss_DP_results\boat_sdp.png')
%         
%      case 7
%         saveas(figure(1),'Signal_loss_transit_results\NorthEast_str.png')
%         saveas(figure(2),'Signal_loss_transit_results\NED_3D_str.png')
%         saveas(figure(3),'Signal_loss_transit_results\sub_bias_str.png')
%         saveas(figure(4),'Signal_loss_transit_results\sub_NEDY_str.png')
%         saveas(figure(5),'Signal_loss_transit_results\sub_uvwr_str.png')
%         saveas(figure(7),'Signal_loss_transit_results\tau_str.png')
%         saveas(figure(8),'Signal_loss_transit_results\thrusters_str.png')
%         saveas(figure(9),'Signal_loss_transit_results\DP_controller_str.png')
%         saveas(figure(12),'Signal_loss_transit_results\boat_str.png')
% 
%      case 8
%         saveas(figure(1),'Robust_results\NorthEast_rob.png')
%         saveas(figure(2),'Robust_results\NED_3D_rob.png')
%         saveas(figure(3),'Robust_results\sub_bias_rob.png')
%         saveas(figure(4),'Robust_results\sub_NEDY_rob.png')
%         saveas(figure(5),'Robust_results\sub_uvwr_rob.png')
%         saveas(figure(7),'Robust_results\tau_rob.png')
%         saveas(figure(8),'Robust_results\thrusters_rob.png')
%         saveas(figure(9),'Robust_results\DP_controller_rob.png')
%         saveas(figure(12),'Robust_results\boat_rob.png')   
%         
%       case 9
%         saveas(figure(1),'C_avoid_results\NorthEast_ca.png')
%         saveas(figure(2),'C_avoid_results\NED_3D_ca.png')
%         saveas(figure(3),'C_avoid_results\sub_bias_ca.png')
%         saveas(figure(4),'C_avoid_results\sub_NEDY_ca.png')
%         saveas(figure(5),'C_avoid_results\sub_uvwr_ca.png')
%         saveas(figure(7),'C_avoid_results\tau_ca.png')
%         saveas(figure(8),'C_avoid_results\thrusters_ca.png')
%         saveas(figure(9),'C_avoid_results\DP_controller_ca.png')
%         saveas(figure(12),'C_avoid_results\boat_ca.png')   
%         
%      otherwise
% 
%     end
% end

%% Controller
% figure(9)
% subplot(2,2,3)
% plot(ctrl_z(1,:),ctrl_z(2,:),'r',ctrl_z(1,:),ctrl_z(3,:),'b',ctrl_z(1,:),ctrl_z(4,:),'g')
% legend('P','I','D')
% title('Controller contribution z')
% grid on
% subplot(2,2,1)
% plot(ctrl(1,:),ctrl(2,:),'r',ctrl(1,:),ctrl(5,:),'b',ctrl(1,:),ctrl(8,:),'g')
% legend('P','I','D')
% title('Controller contribution x')
% grid on
% 
% subplot(2,2,2)
% plot(ctrl(1,:),ctrl(3,:),'r',ctrl(1,:),ctrl(6,:),'b',ctrl(1,:),ctrl(9,:),'g')
% legend('P','I','D')
% title('Controller contribution y')
% grid on
% 
% subplot(2,2,4)
% plot(ctrl(1,:),ctrl(4,:),'r',ctrl(1,:),ctrl(7,:),'b',ctrl(1,:),ctrl(10,:),'g')
% legend('P','I','D')
% title('Controller contribution psi')
% grid on
% 
% subplot(2,2,3)
% plot(ctrl_z(1,:),ctrl_z(2,:),'r',ctrl_z(1,:),ctrl_z(3,:),'b',ctrl_z(1,:),ctrl_z(4,:),'g')
% legend('P','I','D')
% title('Controller contribution z')
% grid on
% 
% %% Transit controller
% figure(11)
% subplot(3,1,1)
% plot(LOS(1,:),LOS(4,:),'r',LOS(1,:),LOS(5,:),'b',LOS(1,:),LOS(6,:),'g')
% legend('P','I','D')
% xlabel('Time [s]'), ylabel('Controller contribution \psi')
% title('Transit controller \psi')
% 
% subplot(3,1,2)
% plot(ctrl_u(1,:),ctrl_u(2,:),'r',ctrl_u(1,:),ctrl_u(3,:),'b',ctrl_u(1,:),ctrl_u(4,:),'k')
% legend('P','I','Reference feed forward')
% xlabel('Time [s]'), ylabel('Controller contribution u')
% title('Transit controller u')
% 
% subplot(3,1,3)
% plot(ctrl_v(1,:),ctrl_v(2,:),'r',ctrl_v(1,:),ctrl_v(3,:),'b')
% legend('P','I')
% xlabel('Time [s]'), ylabel('Controller contribution v')
% title('Transit controller v')